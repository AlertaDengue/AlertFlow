name: AlertFlow

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AIRFLOW_PROJ_DIR: /home/runner/work/AlertFlow/AlertFlow/alertflow
  AIRFLOW_HOME: /opt/airflow
  AIRFLOW_PORT: 8081
  AIRFLOW_UID: 1000
  HOST_UID: 1000
  HOST_GID: 1000
  _AIRFLOW_WWW_USER_USERNAME: ci
  _AIRFLOW_WWW_USER_PASSWORD: ci
  # PSQL_USER_MAIN: ${{ secrets.CI_PSQL_USER }}
  # PSQL_PASSWORD_MAIN: ${{ secrets.CI_PSQL_PASSWORD }}
  # PSQL_HOST_MAIN: ${{ secrets.CI_PSQL_HOST }}
  # PSQL_PORT_MAIN: ${{ secrets.CI_PSQL_PORT }}
  # PSQL_DB_MAIN: ${{ secrets.CI_PSQL_DB }}

jobs:
  main:

    runs-on: ubuntu-latest
    timeout-minutes: 55
    defaults:
      run:
        shell: bash -l {0}
    concurrency:
      group: ci-${{ github.ref }}
      cancel-in-progress: true

    steps:
    - uses: actions/checkout@v3

    # Check if the repository is a fork
    - name: Check if repository is a fork
      run: |
        if [[ "${{ github.event.repository.fork }}" == "true" ]]; then
          export PSQL_USER_MAIN="${{ secrets.CI_PSQL_USER_FORK }}"
          export PSQL_PASSWORD_MAIN="${{ secrets.CI_PSQL_PASSWORD_FORK }}"
          export PSQL_HOST_MAIN="${{ secrets.CI_PSQL_HOST_FORK }}"
          export PSQL_PORT_MAIN="${{ secrets.CI_PSQL_PORT_FORK }}"
          export PSQL_DB_MAIN="${{ secrets.CI_PSQL_DB_FORK }}"
        else
          export PSQL_USER_MAIN="${{ secrets.CI_PSQL_USER }}"
          export PSQL_PASSWORD_MAIN="${{ secrets.CI_PSQL_PASSWORD }}"
          export PSQL_HOST_MAIN="${{ secrets.CI_PSQL_HOST }}"
          export PSQL_PORT_MAIN="${{ secrets.CI_PSQL_PORT }}"
          export PSQL_DB_MAIN="${{ secrets.CI_PSQL_DB }}"
        fi

    - name: Semantic Release Title Check
      uses: osl-incubator/semantic-release-pr-title-check@v1.4.1
      with:
        convention-name: conventionalcommits

    - name: Setup tmate session
      # if: "${{ failure() }}"
      uses: mxschmitt/action-tmate@v3

    - name: Install Conda Dependencies
      uses: conda-incubator/setup-miniconda@v2
      with:
        miniconda-version: "latest"
        mamba-version: "*"
        environment-file: conda/env.yaml
        channels: conda-forge,nodefaults
        activate-environment: alertflow
        use-mamba: true
        miniforge-variant: Mambaforge

    - name: Create environment variables file
      run: |
        envsubst < env.tpl > .env

    - name: Lint All Files
      run: |
        make linter

    - name: Build Base Image
      run: |
        sudo systemctl start postgresql.service
        make containers-build

    - name: Start Airflow
      run: |
        make containers-start

    - name: Wait Containers
      run: |
        make containers-wait-all

